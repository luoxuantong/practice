<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
          p:pool-config-ref="poolConfig"/>

    <!-- 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 -->
    <!--<bean id="redisCacheTransfer" class="RedisCacheTransfer">-->
        <!--<property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>-->
    <!--</bean>-->

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer" ref="serialization"/>
    </bean>


    <bean id="serialization"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <bean id="messageDelegateListener" class="com.lemo.cmx.redisp.MessageDelegateListener"/>

    <!--<bean id="redisMessageListener" class="RedisMessageListener">-->
    <!--<property name="serializer" ref="serialization"/>-->
    <!--</bean>-->

    <!--<bean id="redisMessageListenerContainer"-->
    <!--class="org.springframework.data.redis.listener.RedisMessageListenerContainer">-->
    <!--<property name="connectionFactory" ref="jedisConnectionFactory"/>-->
    <!--<property name="messageListeners">-->
    <!--<map>-->
    <!--<entry key-ref="redisMessageListener">-->
    <!--<bean class="org.springframework.data.redis.listener.ChannelTopic">-->
    <!--<constructor-arg value="java"/>-->
    <!--</bean>-->
    <!--</entry>-->
    <!--</map>-->
    <!--</property>-->
    <!--</bean>-->
    <bean id="messageListener"
          class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="messageDelegateListener"/>
        <property name="serializer" ref="serialization"/>
    </bean>

    <bean id="redisProducer" class="com.lemo.cmx.redisp.RedisProducer">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <!--<redis:listener-container connection-factory="jedisConnectionFactory">-->
    <!--&lt;!&ndash;     the method attribute can be skipped as the default method name is-->
    <!--"handleMessage"-->
    <!--topic代表监听的通道，是一个正规匹配 &ndash;&gt;-->
    <!--<redis:listener ref="messageListener" serializer="serialization" method="addShopDiscuss" topic="addShopDiscuss" />-->
    <!--</redis:listener-container>-->


    <bean id="redisMessageListenerContainer"
          class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="messageListeners">
            <map>
                <!--<entry key-ref="messageListener">-->
                <!--<bean class="org.springframework.data.redis.listener.ChannelTopic">-->
                <!--<constructor-arg value="java"/>-->
                <!--</bean>-->
                <!--</entry>-->
                <entry key-ref="messageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="java"/>
                    </bean>
                </entry>

            </map>
        </property>
    </bean>


</beans>