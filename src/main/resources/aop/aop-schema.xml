<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--声明业务类-->
    <bean id="baseBusiness" class="com.lemo.cmx.aop.BaseBusinessImpl"/>
    <!--声明通知类-->
    <bean id="baseBefore" class="com.lemo.cmx.aop.BusinessBeforeAdvice"/>
    <bean id="baseAfter" class="com.lemo.cmx.aop.BusinessAfterReturningAdvice"/>
    <bean id="baseAround" class="com.lemo.cmx.aop.BusinessAroundAdvice"/>
    <bean id="baseAfterThrows" class="com.lemo.cmx.aop.BusinessThrowsAdvice"/>
    <!--指定切点匹配类-->
    <bean id="pointMatcher" class="com.lemo.cmx.aop.PointMatcher"/>

    <!--包装通知,指定切点-->
    <bean id="matchBeforeAdvisor"
          class="org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor">
        <property name="pointcut">
            <ref bean="pointMatcher"/>
        </property>
        <!--制定通知-->
        <property name="advice">
            <ref bean="baseBefore"/>
        </property>
    </bean>
    <!--使用ProxyFactoryBean产生代理对象-->
    <bean id="businessProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--代理类实现的接口-->
        <property name="proxyInterfaces">
            <value>com.lemo.cmx.aop.IBaseBusiness</value>
        </property>

        <!--设置目标对象-->
        <property name="target">
            <bean class="com.lemo.cmx.aop.BaseBusinessImpl"/>
        </property>

        <!--代理对象使用的拦截器-->
        <property name="interceptorNames">
            <array>
                <value>matchBeforeAdvisor</value>
                <value>baseAfter</value>
                <value>baseAround</value>
            </array>
        </property>
    </bean>
</beans>